import base64
encoded_script = """aW1wb3J0IG9zCmltcG9ydCBzeXMKaW1wb3J0IHRpbWUKaW1wb3J0IGpzb24KaW1wb3J0IHJlcXVlc3RzCmltcG9ydCB5dF9kbHAKZnJvbSBjb2xvcmFtYSBpbXBvcnQgRm9yZSwgU3R5bGUsIGluaXQKZnJvbSBhcnQgaW1wb3J0IHRleHQyYXJ0Cgppbml0KGF1dG9yZXNldD1UcnVlKQoKZGVmIGNoZWNrX2ludGVybmV0KCk6CiAgICB0cnk6CiAgICAgICAgcmVxdWVzdHMuZ2V0KCJodHRwOi8vd3d3Lmdvb2dsZS5jb20iLCB0aW1lb3V0PTUpCiAgICAgICAgcmV0dXJuIFRydWUKICAgIGV4Y2VwdCByZXF1ZXN0cy5Db25uZWN0aW9uRXJyb3I6CiAgICAgICAgcmV0dXJuIEZhbHNlCgpkZWYgY2hlY2tfZmZtcGVnKCk6CiAgICBpZiBvcy5zeXN0ZW0oImZmbXBlZyAtdmVyc2lvbiIpICE9IDA6CiAgICAgICAgcHJpbnQoRm9yZS5ZRUxMT1cgKyAiUGxlYXNlIGluc3RhbGwgZmZtcGVnIHRvIHByb2NlZWQuIikKICAgICAgICBzeXMuZXhpdCgxKQoKZGVmIGxvYWRfY29uZmlnKCk6CiAgICBpZiBvcy5wYXRoLmV4aXN0cygnY29uZmlnLmpzb24nKToKICAgICAgICB3aXRoIG9wZW4oJ2NvbmZpZy5qc29uJywgJ3InKSBhcyBmaWxlOgogICAgICAgICAgICByZXR1cm4ganNvbi5sb2FkKGZpbGUpCiAgICByZXR1cm4ge30KCmRlZiBzYXZlX2NvbmZpZyhjb25maWcpOgogICAgd2l0aCBvcGVuKCdjb25maWcuanNvbicsICd3JykgYXMgZmlsZToKICAgICAgICBqc29uLmR1bXAoY29uZmlnLCBmaWxlLCBpbmRlbnQ9NCkKCmRlZiBkaXNwbGF5X3dlbGNvbWUoKToKICAgIG9zLnN5c3RlbSgnY2xzJyBpZiBvcy5uYW1lID09ICdudCcgZWxzZSAnY2xlYXInKQogICAgcHJpbnQoRm9yZS5DWUFOICsgdGV4dDJhcnQoIllUNCBEVyIpKQogICAgcHJpbnQoRm9yZS5NQUdFTlRBICsgIlkgVCA0ICBEIFciKQogICAgcHJpbnQoRm9yZS5ZRUxMT1cgKyAiQ29kZWQgQnkgQ2hpZmZ0LCBYenl5eSAmIGx5c3NhZGV2IikKICAgIHByaW50KEZvcmUuV0hJVEUgKyAiVGhpcyBzY3JpcHQgYWxsb3dzIHlvdSB0byBkb3dubG9hZCBZb3VUdWJlIHZpZGVvcyB3aXRoIGF1ZGlvIGluIG1wNCBmb3JtYXQuIikKICAgIHByaW50KCkKCmRlZiBkZXRlY3RfYXVkaW8oKToKICAgIHByaW50KEZvcmUuV0hJVEUgKyAiRGV0ZWN0aW5nIEF1ZGlvIiwgZW5kPScnLCBmbHVzaD1UcnVlKQogICAgZm9yIF8gaW4gcmFuZ2UoMyk6CiAgICAgICAgcHJpbnQoIi4iLCBlbmQ9JycsIGZsdXNoPVRydWUpCiAgICAgICAgdGltZS5zbGVlcCgwLjUpCiAgICBwcmludChGb3JlLkdSRUVOICsgIlxuQXVkaW8gRGV0ZWN0ZWQhIOKchSIpCiAgICBwcmludCgpCgpkZWYgZG93bmxvYWRfdmlkZW8odmlkZW9fdXJsLCBjb29raWVzPU5vbmUpOgogICAgcHJpbnQoRm9yZS5XSElURSArICJEb3dubG9hZGluZyBCZXN0IFF1YWxpdHkgdmlkZW8uLi4iLCBlbmQ9JycsIGZsdXNoPVRydWUpCiAgICB5ZGxfb3B0cyA9IHsKICAgICAgICAnZm9ybWF0JzogJ2Jlc3R2aWRlb1toZWlnaHQ8PTcyMF0rYmVzdGF1ZGlvL2Jlc3QnLAogICAgICAgICdwb3N0cHJvY2Vzc29ycyc6IFt7CiAgICAgICAgICAgICdrZXknOiAnRkZtcGVnVmlkZW9Db252ZXJ0b3InLAogICAgICAgICAgICAncHJlZmVyZWRmb3JtYXQnOiAnbXA0JywKICAgICAgICB9LCB7CiAgICAgICAgICAgICdrZXknOiAnRkZtcGVnRW1iZWRTdWJ0aXRsZScKICAgICAgICB9XSwKICAgICAgICAnb3V0dG1wbCc6ICclKHRpdGxlKXMuJShleHQpcycsCiAgICAgICAgJ21lcmdlX291dHB1dF9mb3JtYXQnOiAnbXA0JywKICAgIH0KICAgIGlmIGNvb2tpZXM6CiAgICAgICAgeWRsX29wdHNbJ2Nvb2tpZWZpbGUnXSA9IGNvb2tpZXMKICAgIHRyeToKICAgICAgICB3aXRoIHl0X2RscC5Zb3V0dWJlREwoeWRsX29wdHMpIGFzIHlkbDoKICAgICAgICAgICAgeWRsLmRvd25sb2FkKFt2aWRlb191cmxdKQogICAgICAgIHByaW50KEZvcmUuR1JFRU4gKyAiXG5WaWRlbyBEb3dubG9hZGVkIFN1Y2Nlc3NmdWxseSDinIUiKQogICAgZXhjZXB0IHl0X2RscC51dGlscy5Eb3dubG9hZEVycm9yIGFzIGU6CiAgICAgICAgaWYgJ2ZmbXBlZycgaW4gc3RyKGUpLmxvd2VyKCk6CiAgICAgICAgICAgIHByaW50KEZvcmUuWUVMTE9XICsgIlBsZWFzZSBpbnN0YWxsIGZmbXBlZyB0byBwcm9jZWVkLiIpCiAgICAgICAgZWxpZiAnU2lnbiBpbiB0byBjb25maXJtIHlvdeKAmXJlIG5vdCBhIGJvdCcgaW4gc3RyKGUpOgogICAgICAgICAgICBwcmludChGb3JlLlJFRCArIGYiXG5FcnJvcjoge3N0cihlKX0iKQogICAgICAgICAgICBwcmludChGb3JlLllFTExPVyArICJQbGVhc2UgZm9sbG93IHRoZSBpbnN0cnVjdGlvbnMgdG8gcGFzcyBjb29raWVzIGZvciBhdXRoZW50aWNhdGlvbi4iKQogICAgICAgICAgICBwcmludChGb3JlLllFTExPVyArICJTZWUgaHR0cHM6Ly9naXRodWIuY29tL3l0LWRscC95dC1kbHAvd2lraS9GQVEjaG93LWRvLWktcGFzcy1jb29raWVzLXRvLXl0LWRscCBmb3IgbW9yZSBkZXRhaWxzLiIpCiAgICAgICAgICAgIGNvb2tpZXMgPSBpbnB1dChGb3JlLldISVRFICsgIkVudGVyIHRoZSBwYXRoIHRvIHlvdXIgY29va2llcyBmaWxlOiAiKS5zdHJpcCgpCiAgICAgICAgICAgIGlmIGNvb2tpZXM6CiAgICAgICAgICAgICAgICBkb3dubG9hZF92aWRlbyh2aWRlb191cmwsIGNvb2tpZXMpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQoRm9yZS5SRUQgKyBmIlxuRXJyb3I6IHtzdHIoZSl9IikKICAgICAgICAgICAgcHJpbnQoRm9yZS5ZRUxMT1cgKyAiUGxlYXNlIGZvbGxvdyB0aGUgaW5zdHJ1Y3Rpb25zIHRvIHBhc3MgY29va2llcyBmb3IgYXV0aGVudGljYXRpb24uIikKICAgICAgICAgICAgcHJpbnQoRm9yZS5ZRUxMT1cgKyAiU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS95dC1kbHAveXQtZGxwL3dpa2kvRkFRI2hvdy1kby1pLXBhc3MtY29va2llcy10by15dC1kbHAgZm9yIG1vcmUgZGV0YWlscy4iKQogICAgICAgIHN5cy5leGl0KDEpCiAgICBwcmludCgpCgpkZWYgbWFpbigpOgogICAgb3Muc3lzdGVtKCdjbHMnIGlmIG9zLm5hbWUgPT0gJ250JyBlbHNlICdjbGVhcicpCiAgICBpZiBub3QgY2hlY2tfaW50ZXJuZXQoKToKICAgICAgICBwcmludChGb3JlLlJFRCArICJBIGZhdGFsIGVycm9yIGhhcyBvY2N1cnJlZCwgcGxlYXNlIHRyeSBhZ2FpbiBsYXRlciBvciBjaGVjayB5b3VyIGludGVybmV0IOKdjCIpCiAgICAgICAgc3lzLmV4aXQoMSkKCiAgICBjaGVja19mZm1wZWcoKQoKICAgIGNvbmZpZyA9IGxvYWRfY29uZmlnKCkKICAgIGRpc3BsYXlfd2VsY29tZSgpCiAgICB2aWRlb191cmwgPSBpbnB1dChGb3JlLldISVRFICsgIkVudGVyIHRoZSBZb3VUdWJlIHZpZGVvIFVSTDogIikKICAgIGNvb2tpZXMgPSBjb25maWcuZ2V0KCdjb29raWVzJykKICAgIGlmIGNvb2tpZXM6CiAgICAgICAgcHJpbnQoRm9yZS5XSElURSArIGYiVXNpbmcgY29va2llcyBmaWxlIGZyb20gY29uZmlnOiB7Y29va2llc30iKQogICAgICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhjb29raWVzKToKICAgICAgICAgICAgcHJpbnQoRm9yZS5SRUQgKyBmIkNvb2tpZXMgZmlsZSBub3QgZm91bmQ6IHtjb29raWVzfSIpCiAgICAgICAgICAgIHN5cy5leGl0KDEpCiAgICAgICAgdGltZS5zbGVlcCg0KQogICAgZWxzZToKICAgICAgICBjb29raWVzID0gaW5wdXQoRm9yZS5XSElURSArICJFbnRlciB0aGUgcGF0aCB0byB5b3VyIGNvb2tpZXMgZmlsZSAob3IgcHJlc3MgRW50ZXIgdG8gc2tpcCk6ICIpLnN0cmlwKCkKICAgICAgICBpZiBjb29raWVzOgogICAgICAgICAgICBjb25maWdbJ2Nvb2tpZXMnXSA9IGNvb2tpZXMKICAgICAgICAgICAgc2F2ZV9jb25maWcoY29uZmlnKQogICAgcHJpbnQoKQogICAgZGV0ZWN0X2F1ZGlvKCkKICAgIGRvd25sb2FkX3ZpZGVvKHZpZGVvX3VybCwgY29va2llcyBpZiBjb29raWVzIGVsc2UgTm9uZSkKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBtYWluKCk="""
script = base64.b64decode(encoded_script.encode()).decode()
exec(script)
